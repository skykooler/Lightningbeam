body {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.logo.vanilla:hover {
  filter: drop-shadow(0 0 2em #ffe21c);
}
:root {
  --lineheight: 24px;
  font-family: Inter, Avenir, Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: var(--lineheight);
  font-weight: 400;

  color: #0f0f0f;
  background-color: #f6f6f6;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  height: 100%;
}

.container {
  margin: 0;
  padding-top: 10vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: 0.75s;
}

.logo.tauri:hover {
  filter: drop-shadow(0 0 2em #24c8db);
}

.row {
  display: flex;
  justify-content: center;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}

a:hover {
  color: #535bf2;
}

h1 {
  text-align: center;
}

input,
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  color: #0f0f0f;
  background-color: #ffffff;
  transition: border-color 0.25s;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);
}

button {
  cursor: pointer;
}

button:hover {
  border-color: #396cd8;
}
button:active {
  border-color: #396cd8;
  background-color: #e8e8e8;
}

input,
button {
  outline: none;
}

#greet-input {
  margin-right: 5px;
}

@media (prefers-color-scheme: dark) {
  :root {
    color: #f6f6f6;
    background-color: #2f2f2f;
  }

  a:hover {
    color: #24c8db;
  }

  input,
  button {
    color: #ffffff;
    background-color: #0f0f0f98;
  }
  button:active {
    background-color: #0f0f0f69;
  }
}

.header {
  height: 60px;
  min-width: 100%;
  background-color: #3f3f3f;
  text-align: left;
  z-index: 1;
}

.icon {
  width: var(--lineheight);
  height: var(--lineheight);
}

.panecontainer {
  width: 100%;
  height: 100%;
}

.horizontal-grid, .vertical-grid {
  display: flex;
  gap: 5px;
  background-color: #0f0f0f;
  width: 100%;
  height: 100%;
  contain: strict;
}
.horizontal-grid {
  flex-direction: row;
}
.vertical-grid {
  flex-direction: column;
}
/* I don't fully understand this selector but it works for now */
.horizontal-grid:hover:not(:has(*:hover)) {
  background: red;
  cursor: ew-resize;
}
.vertical-grid:hover:not(:has(*:hover)) {
  background: red;
  cursor: ns-resize
}
.scroll {
  overflow: scroll;
  width: 100%;
  height: 100%;
}
.stage {
  width: 1500px;
  height: 1000px;
  overflow: scroll;
}
.toolbar {
  display: flex;
  flex-direction: row;
  gap: 10px;
  padding: 5px;
  flex-wrap: wrap;
  align-content: flex-start;
  justify-content: space-around;
}
.toolbtn {
  width: calc( 3 * var(--lineheight) );
  height: calc( 3 * var(--lineheight) );
  background-color: #2f2f2f;
}

.horiz_break {
  width: 100%;
  height: 5px;

  background-color: #2f2f2f;
}
.clr-field {
  width: 100%;
}
.clr-field button {
  width: 50% !important;
  /* height: 100% !important; */
  /* margin: 100px; */
  border-radius: 5px;
}
.clr-field input {
  width: 50%;
}
.infopanel {
  width: 100%;
  height: 100%;
  background-color: #3f3f3f;
  display: flex;
  box-sizing: border-box;
  gap: calc( var(--lineheight) / 2 );
  padding: calc( var(--lineheight) / 2 );
  flex-direction: column;
  flex-wrap: wrap;
  align-content: flex-start;
}
.infopanel-field {
  width: 300px;
  height: var(--lineheight);
  display: flex;
  flex-direction: row;
}
.infopanel-label {
  flex: 1 1 50%;
}
.infopanel-input {
  flex: 1 1 50%;
  width: 50%;
}